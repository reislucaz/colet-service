generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  passwordHash  String  @map("password_hash")

  messagesSent Message[] @relation(name: "from_user")
  messagesReceived   Message[] @relation(name: "to_user")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Category {
  id        String   @id @default(cuid())

  name      String
  
  description String

  products Product[]

  iconKey String @map("icon_key")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Product {
  id        String   @id @default(cuid())
  
  name      String

  description String

  price     Float?

  recurring Boolean @default(false)

  category Category @relation(fields: [categoryId], references: [id])

  categoryId String @map("category_id")

  images    Image[]

  // for while, we will not have a user for each product
  
  authorName String @map("author_name")
  authorEmail String @map("author_email")
  authorPhone String @map("author_phone")

  // address

  neighborhood String
  city String
  state String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Image {
  id        String   @id @default(cuid())

  key      String

  productId String @map("product_id")

  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Message {
  id        String   @id @default(cuid())

  text      String

  fromUser  User @relation(name: "from_user", fields: [fromUserId], references: [id])

  fromUserId String @map("from_user_id")

  toUser    User @relation(name: "to_user", fields: [toUserId], references: [id])

  toUserId  String @map("to_user_id")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}